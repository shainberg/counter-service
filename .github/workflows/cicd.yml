
# This is a basic workflow to help you get started with Actions
name: CICD Main

# Controls when the workflow will run
on:
# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  # Triggers the workflow on push or pull request events
  push:
    branches: [ "dev" , "main" ]
  pull_request:
    branches:
      - dev
      - main
  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      DOCKER_HUB_USERNAME: ${{ vars.DOCKER_HUB_USERNAME }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      #get sha for taging and check the variables are works
      - name: Get short commit SHA
        id: vars 
        run: |
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "The SHORT_SHA name is ${GITHUB_ENV}"
          echo "path repo ${{ github.workspace }}"
        
      #  QEMU allows you to emulate these architectures
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      # setup-buildx
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3.7.1
 
      - name: Use Environment Variable
        run: echo "The environment name is ${DOCKER_HUB_USERNAME} and ${{ secrets.DOCKER_HUB_TOKEN }}"
      
# Runs a set of commands using the runners shell
      - name: Log in to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: dev  # Ensure you are checking out the dev branch
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ github.workspace }}/
          file: Dockerfile
          push: true
          tags: ${{ vars.DOCKER_HUB_USERNAME }}/counter-service:latest  # Change `my-app` to your image name
  
  deploy:
      runs-on: ubuntu-latest
      needs: build
      if: github.ref == 'refs/heads/main'  # Only run this job on main branch
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
  
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ vars.AWS_REGION }}
  
        - name: Update kubeconfig
          run: |
            aws eks update-kubeconfig --name ${{ vars.EKS_CLUSTER_NAME }} --region ${{ vars.AWS_REGION }}
  
        - name: Deploy to EKS
          run: |
            kubectl set image deployment/counter-service-deployment counter-service=${{ vars.DOCKER_HUB_USERNAME }}/counter-service:latest  
            kubectl rollout restart deployment/counter-service-deployment
            kubectl rollout status deployment/counter-service-deployment  
          
